---
//@ts-nocheck
import DynamicImage from "@components/helpers/DynamicImage.astro";
import caseStudy from "@data/caseStudy.json";
import Button from "./Button.astro";
const { caseName, category, date, image, buttonLabel } = caseStudy.caseDetails;
---

<article>
  <header>
    <DynamicImage imagePath={image} altText={caseName} />
    <div class="case-details">
      <dl>
        <div>
          <dt>Case Name</dt>
          <dd>{caseName}</dd>
        </div>
        <div>
          <dt>Category</dt>
          <dd class="category">{category}</dd>
        </div>
        <div>
          <dt>Date</dt>
          <dd class="date">{date}</dd>
        </div>
      </dl>
      <Button txt="Live Preview" />
    </div>
  </header>
  {
    caseStudy.sections.map((section) => (
      <section>
        {caseStudy.sections[0] === section ? <h2>{section.title}</h2> : <h3>{section.title}</h3>}

        {Array.isArray(section.content) ? (
          <>
            {section.content.map((item) => (
              <p>{item}</p>
            ))}
          </>
        ) : (
          <p>{section.content}</p>
        )}
        {section.highlights && (
          <ul>
            {section.highlights.map((highlight) => (
              <li>{highlight}</li>
            ))}
          </ul>
        )}
        {section.image && <DynamicImage imagePath={section.image} altText={section.title} width={714} height={400} />}
      </section>
    ))
  }
</article>

<style>
  article {
    display: grid;
    grid-template-columns: 1fr minmax(0, 1200px) 1fr;
    margin: 0px 20px;
    margin-top: 9svw;

    > * {
      grid-column: 2;
    }
  }
  header {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;

    > * {
      grid-column: 1;
    }
    > img {
      grid-row: 1 / 4;
      border-radius: 20px;
    }
  }
  .case-details {
    grid-row: 3 / 5;
    display: flex;
    background-color: var(--bg-color-black);
    color: #fff;
    padding: 53px 60px;
    place-self: center;
    border-radius: 30px;
    gap: 9.86svw;

    > a {
      place-self: center;
    }

    > dl {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-template-rows: min-content min-content;
      gap: 0px 5.8svw;

      > div {
        display: grid;
        grid-row: 1 / 3;
        grid-template-rows: subgrid;

        > dt {
          grid-row: 1;
        }
        > dd {
          grid-row: 2;
        }
      }
    }
  }

  section {
    display: grid;
    grid-template-columns: 1fr minmax(0, 794px) 1fr;

    > * {
      grid-column: 2;
    }
    > img {
      justify-self: center;
    }
  }
  dt {
    font-family: Cabin;
    font-size: var(--size-1);
    font-style: normal;
    font-weight: 500;
    margin-bottom: 10px;
  }
  dd {
    font-family: Cabin;
    font-size: var(--size-0);
    font-style: normal;
    font-weight: 400;
  }

  h2 + p {
    margin-top: var(--space-xs);
  }

  p + ul {
    margin-top: var(--space-l);
  }

  section:has(img) {
    margin-top: var(--space-xl);
    margin-bottom: var(--space-m);
  }
  section:has(img) > h3 {
    margin-bottom: var(--space-m);
  }
  section:has(img) * + p {
    margin-bottom: var(--space-m);
  }
  section:not(:has(img)) h3 + p {
    margin-top: var(--space-l);
  }
  section:not(:has(img)) p + p {
    margin-top: var(--space-l);
  }
</style>
