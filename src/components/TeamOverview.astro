---
const { num, btn = true } = Astro.props;
const limit = Number(num) > 0 ? Number(num) : employees.length;
import DynamicImage from "./helpers/DynamicImage.astro";
import DynamicIcon from "./helpers/DynamicIcon.astro";
import employees from "@data/employees.json";
import Button from "./Button.astro";
---

<section>
  <div>
    <div style={btn ? "flex: 1" : "flex: 0.5"}>
      <slot />
    </div>
    {btn && <Button txt="Join our team" />}
  </div>
  <section>
    {
      employees.slice(0, limit).map((employee) => (
        <a href={`/team/${employee.slug}`}>
          <div>
            <DynamicImage imagePath={employee.img} altText={employee.slug} />
            <p style={`color: ${employee.title === "CEO at Company" ? "var(--bg-color-black)" : "#fff"}; background: ${employee.title === "CEO at Company" ? "var(--primary-color-01)" : "var(--bg-color-black)"};`}>{employee.title}</p>
          </div>
          <h3>{employee.name}</h3>
          <p>{employee.description}</p>
          <div class="icons">
            <DynamicIcon name={employee.social_links[0].icon} />
            <DynamicIcon name={employee.social_links[1].icon} />
            <DynamicIcon name={employee.social_links[2].icon} />
          </div>
        </a>
      ))
    }
  </section>
</section>

<style>
  h2 {
    margin-bottom: var(--space-2xs);
  }
  section {
    display: grid;
    grid-template-columns: 1fr minmax(0, 1200px) 1fr;
    margin: 0px 20px;
    margin-top: var(--space-2xl);
    container: section / inline-size;

    > section {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-column: 2;
      gap: 80px 51px;
      margin: 0px 0px;
      margin-top: var(--space-l);
    }

    > div:not(:has(h3)) {
      display: flex;
      gap: 20svw;

      > a {
        place-self: end;
      }
    }

    @container section (width < 700px) {
      > section {
        grid-template-columns: 1fr;

        > a {
          display: grid;
          grid-template-columns: 1fr 1fr;
          grid-template-rows: 1fr 1fr 1fr;
          gap: 15px;

          > div:has(img) {
            grid-column: 1 / 2;
            grid-row: 1 / 4;
          }
        }
      }
      > div:not(:has(h3)) {
        gap: 2svw;
        flex-direction: column;

        > a {
          place-self: start;
        }
      }
    }

    > div:has(h2) {
      grid-column: 2;
    }
  }

  a > div:has(img) {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;

    > img {
      border-radius: 20px;
    }

    > * {
      grid-row: 1;
      grid-column: 1;
    }
    > p {
      border-radius: 29px;
      background: var(--bg-color-black);
      color: #fff;
      width: fit-content;
      height: fit-content;
      padding: 4px 21px;
      place-self: end;
      margin: 25px 20px;
    }
  }

  .icons {
    display: flex;
    gap: 29px;
    justify-self: center;
  }

  h3 {
    text-align: center;
    margin-bottom: var(--space-2xs);
    margin-top: var(--space-s);

    + p {
      text-align: center;
      margin-bottom: var(--space-s);
    }
  }

  a,
  a:visited {
    text-decoration: none;
    color: var(--bg-color-black);
  }
</style>
